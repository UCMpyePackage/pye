% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AUC_based_functions_with_covariates.R
\name{AucPR_estimation}
\alias{AucPR_estimation}
\title{AucPR_estimation}
\usage{
AucPR_estimation(
  df,
  X = names(df[, !(names(df) == y)]),
  y = "y",
  lambda,
  alpha = 1,
  model_type = NULL,
  fold = NULL,
  regressors_betas = NULL,
  trace = 1,
  max.print = 10,
  ...
)
}
\arguments{
\item{df}{the input dataset}

\item{X}{regressors to consider in the estimation. It can be of type
dataframe, containing also the same name of the regressors included in df,
of just a vector of character. Default is all not present in y}

\item{y}{the target variable. It can be only binomial 0,1. It can be of type
dataframe, containing also the same name of the same target variable included
in df, or just a character. Default is "y".}

\item{lambda}{the penalization parameter of the regressors X}

\item{alpha}{parameter for the Elastic-Net penalization term. If 1 the method
uses the L1 penalization. If (0,1) it uses Elastic-Net. Default is 1}

\item{model_type}{model to use in the estimation. The user can choose
among "AucPR_L1","AucPR_EN". Default is NULL, i.e. if not specified, it is
defined based on alpha, and since the default of alpha is 1, implicitly the
default is "AucPR_L1".}

\item{fold}{number of the fold if the function is called in cross-validation.
Just for visualization purposes. Default is NULL}

\item{regressors_betas}{a vector containing the real betas (if known). Default
is NULL, i.e. we do not know the real regressors}

\item{trace}{2:visualize all the steps, 1:visualize just the result,
0:visualize nothing. Default is 1}

\item{max.print}{number of elements to show if printing the results. Default
is 10}

\item{...}{possibility to insert additional variables if necessary, not
affecting the result}
}
\value{
a list containing the optimal value of betas and the value
of the main accuracy measure.
}
\description{
function to estimate the optimal value of betas using the
AucPR method.
}
\examples{
library(pye)
cols <- 2000
cols_cov <- 20
seed=1
simMicroarrayData_cov02_dim50_covariates <- create_sample_with_covariates(
		rows_train=50, cols=cols, cols_cov=cols_cov, covar=0.2, seed=seed)
df <- simMicroarrayData_cov02_dim50_covariates$train_df_scaled
X <- simMicroarrayData_cov02_dim50_covariates$X
y <- simMicroarrayData_cov02_dim50_covariates$y
regressors_betas<-simMicroarrayData_cov02_dim50_covariates$nregressors
model_type <- "AucPR_L1"
lambda <- 0.1

z_hat <- AucPR_estimation(df=df, X=X, y=y, model_type=model_type, lambda=lambda,
      	regressors_betas=regressors_betas, trace=1)

print(z_hat)

}
